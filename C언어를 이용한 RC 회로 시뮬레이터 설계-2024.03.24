#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cmath>
#include <iomanip>
#include <cstdlib>  // malloc, free를 사용하기 위해 필요

using namespace std;

struct RC_SIM
{
    double time;
    double vc;     // 커패시터 전압
    double i;      // 전류
};

int main(void)
{
    double start_time = 0.0;
    double end_time = 0.0;
    double time_step = 0.1;
    double R = 1000.0;
    double C = 1e-6;
    double V_source = 5.0;
    double initial_vc = 0.0;

    cout << "RC 회로 시뮬레이션" << endl;
    cout << "==================" << endl;

    cout << "저항 값 (Ohms): ";
    cin >> R;

    cout << "커패시터 값 (μF): ";
    double temp_C;
    cin >> temp_C;
    C = temp_C * 1e-6;

    cout << "입력 전압 (Volts): ";
    cin >> V_source;

    cout << "시작 시간 (초): ";
    cin >> start_time;

    cout << "종료 시간 (초): ";
    cin >> end_time;

    cout << "시간 간격 (초): ";
    cin >> time_step;

    cout << "초기 커패시터 전압 (Volts): ";
    cin >> initial_vc;
    cout << endl;

    if (end_time <= start_time) {
        cout << "오류: 종료 시간은 시작 시간보다 커야 합니다." << endl;
        return -1;
    }
    if (R <= 0 || C <= 0) {
        cout << "오류: 저항과 커패시터 값은 양수여야 합니다." << endl;
        return -1;
    }

    long no_array = static_cast<long>((end_time - start_time) / time_step) + 1;
    cout << "시간 단계 수: " << no_array << endl;

    double tau = R * C;
    cout << "RC 시정수 (tau): " << tau << " 초" << endl << endl;

    // malloc을 사용하여 동적 메모리 할당
    RC_SIM* simulation = (RC_SIM*)malloc(no_array * sizeof(RC_SIM));

    // 메모리 할당 실패 확인
    if (simulation == nullptr) {
        cout << "메모리 할당 실패!" << endl;
        return -1;
    }

    for (int i = 0; i < no_array; i++) {
        double t = start_time + i * time_step;
        simulation[i].time = t;
        simulation[i].vc = V_source * (1 - exp(-(t - start_time) / tau)) + initial_vc * exp(-(t - start_time) / tau);
        simulation[i].i = (V_source - simulation[i].vc) / R;
    }

    cout << "시뮬레이션 결과:" << endl;
    cout << "================" << endl;
    cout << setw(10) << "시간(초)" << setw(15) << "전압(V)" << setw(15) << "전류(mA)" << endl;
    cout << "----------------------------------------" << endl;

    for (int i = 0; i < no_array; i++) {
        cout << fixed << setprecision(3);
        cout << setw(10) << simulation[i].time
            << setw(15) << simulation[i].vc
            << setw(15) << simulation[i].i * 1000 << endl;

        if (no_array > 20 && i % (no_array / 20) != 0 && i != no_array - 1) {
            continue;
        }
    }

    // malloc으로 할당한 메모리 해제
    free(simulation);

    return 0;
}
